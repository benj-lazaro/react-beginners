Handling Events
---------------
- To handle a "click" event in a React component
    - Each JSX element comes with a property called "onClick"
        - It is written (expressed) like an HTML attribute

    - Assign the "onClick" property with a pair of { }

    - Inside the pair of { }
        - Assign an anonymous arrow function
        - Contains the corresponding code (action) when a rendered JSX element is clicked


- To identify (see) the actual JSX element that was clicked
    - Using the .map() method
        - Each element of the array is passed as an individual argument value
            - To the associated arrow function

        - Use the individual "mapped" array element 
            - To identify which rendered JSX element is clicked

        - NOTE: Using .map(), you can OPTIONALLY pass an "index" parameter
            - It returns the associated index of the array element that was mapped
    

- The arrow function assigned to the "onClick" property
    - Can optionally have a parameter that represents a browser event named "event" or "e"

    - The "event" refers to React's cross-browser wrapper
        - It wraps the browser's native event object 
        - Since every browser has its own implementation of an event object

    - The data type of the "event" is React.MouseEvent


- When implementing a complext event-handling logic
    - It is best to move it to a separate function (expression)
        - Instead of implementing it inside of a JSX markup

            const handleClick = (event) => console.log(event);

    - When working with React's "event" parameter 
        - The data type "MouseEvent" should be imported from the React library

            import { MouseEvent } from "react";

        - This is to address the following error message generated by the TypeScript compiler

            Parameter 'event' implicity has any type. ts(7006)

        - Annotate the data type of "event"

            const handleClick = (event: MouseEvent) => console.log(event);

        - Pass the function as argument value to the "onClick" prop (property)

            <li className="list-group-item" key={item} onClick={handleClick}>
                {item}
            </li>

            