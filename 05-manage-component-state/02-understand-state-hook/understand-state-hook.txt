Understanding State Hook
------------------------
- State Hooks allows us to add state to function components


- React update State Hook(s) in an asynchronous manner (NOT applied immediately)
    - State updates are batched
    - Applied at once after ALL event handlers have finished execution
    - Only then React re-renders a component
    - This is done for performance reasons


- When using State Hooks
    - State Variables are created outside of a component

    - React stores them in memory
        - As long as the associated component is visible on screen (web page)

    - As soon as a component is removed from the screen
        - React destroys the component and associated State Variables


- Call State Hooks at ONLY the top-level (beginning) of a function component
    - State Variables are local identifiers to the function component
    
    - React is NOT aware of the State Variables' names
        - They are stored in memory as an array
        
    - Reeact solely relies on the order in which State Hooks are called
        - To assign / map the values from the array to the State Variable of a State Hook

        - To demonstrate, when a component with a State Hook is called / re-rendered
            - React looks up at the array containing state value(s)
            - Grabs the 1st array element (state value)
            - Assigns / maps it to the State Variable of the 1st State Hook
            - React proceeds with the suceeding array element
            - Assigns / maps it to the State Variable of the succeeding State Hook

        - Relies on the order of the array elements
            - To properly assign / map the state value to the State Variable of a State Hook

        - When a component using State Hook is called or re-rendered
            - React looks up at the array containing state values
            - Grabs the 1st state value 
            - Assigns / maps the value to the State Variable of the 1st State Hook
            - React proceeds with the succeeding state value
            - Assigns / maps the value to the State Variable of the suceeding State Hook
            
    - State Hooks can NOT be used within a conditional statements, loops or in nested functions
        - These constructs impacts the ORDER in which State Hooks are called

        - To ensure consistent order
            - State Hook(s) can ONLY be called at the top-level (beginning) of a component
