Disabling the Submit Button
---------------------------
- How to disable the "Submit" button of a form
    - While the component's form fields are either blank or violates validation rules 
    - Using React Hook Form's property "isValid"


- Pull the property "isValid" from React Hook Form's object "formState"
    - This is to confirm if the user-typed data meets the validation rules or NOT

        const {
            register,
            handleSubmit,
            formState: { errors, isValid },
        } = useForm<FormData>({ resolver: zodResolver(schema) });


- On the component's JSX mark-up
    - Declare the property "disable" on the JSX element <button>
        - Set the value to "!isValid"

        <button disable={!isValid} className="btn btn-primary" type="submit">
            Submit
        </button>

    - This disables the "Submit" button of the form
        - Until the user-typed data on the input fields are valid


- On the example code
    - Open the <Form /> component (Form.tsx)

    - Pull the property "isValid" from React Hook Form's object "formState"

        const {
            register,
            handleSubmit,
            formState: { errors, isValid },
        } = useForm<FormData>({ resolver: zodResolver(schema) });


    - On JSX element <button>, declare the property "disable" & set it to "!isValid"
    
        <button disable={!isValid} className="btn btn-primary" type="submit">
            Submit
        </button>

    - Save the changes
        - Vite reloads the React application

        - The "Submit" button is disabled
            - While the form fields are blank
            - While user-type data violates the validation rules of the form field

        - NOTE: The property "isValid" of the JSX element <button>
            - Prevented error message(s) from being rendered 
                - When invalid user-typed data is provided

            - The error message(s) ONLY gets rendered
                - After an initial successful form submission

